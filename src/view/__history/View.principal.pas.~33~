unit View.principal;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Buttons,
  View.clients, Winapi.Windows;

type
  TViewPrincipal = class(TForm)
    pnlTop: TPanel;
    pnlMenu: TPanel;
    pnlContent: TPanel;
    pnlVersion: TPanel;
    pnlUserData: TPanel;
    lblAccount: TLabel;
    lblUsername: TLabel;
    btnClients: TSpeedButton;
    btnProducts: TSpeedButton;
    btnSuppliers: TSpeedButton;
    btnFinance: TSpeedButton;
    lblFilial: TLabel;
    procedure btnClientsClick(Sender: TObject);

  private
    function IsWindowOpen(const WindowTitle: string): Boolean;
  public
    { Public declarations }
  end;

var
  ViewPrincipal: TViewPrincipal;

implementation

{$R *.dfm}

procedure TViewPrincipal.btnClientsClick(Sender: TObject);
begin
  if IsWindowOpen('ViewClients') then
  begin
    ViewClients := TViewClients.Create(Self);

    try
      ViewClients.Parent := pnlContent;
      ViewClients.Align := alClient;
      ViewClients.Show;

    finally
    //FreeAndNil(ViewClients);
    end;

  end;

end;

function TViewPrincipal.IsWindowOpen(const WindowTitle: string): Boolean;
var
WindowHandle: HWND;
begin
  // Obtém o identificador da janela com base no título
  WindowHandle := FindWindow(nil, PChar(WindowTitle));

  // Verifica se a janela foi encontrada (identificador não é zero)
  Result := WindowHandle <> 0;
end;

end.
